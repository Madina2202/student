"use strict";
import { jsx, jsxs } from "react/jsx-runtime";
import { useNavigate } from "@umijs/max";
import { Button, Form, Input, message } from "antd";
import { request } from "@umijs/max";
import { useState } from "react";
export default function Auth() {
  const [loading, setLoading] = useState(false);
  const loginHandler = (data) => {
    console.log(data);
  };
  const navigate = useNavigate();
  const onFinish = async (values) => {
    setLoading(true);
    try {
      const response = await request("/api/Auth/Login", {
        method: "POST",
        data: values
      });
      if (response && response.token) {
        localStorage.setItem("token", response.token);
        message.success("\u0423\u0441\u043F\u0435\u0448\u043D\u0430\u044F \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u044F");
        navigate("/");
      } else {
        message.error("\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043E\u0442\u0432\u0435\u0442 \u043E\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430");
      }
    } catch (error) {
      message.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438");
    } finally {
      setLoading(false);
    }
  };
  return /* @__PURE__ */ jsx("div", { children: /* @__PURE__ */ jsxs(
    Form,
    {
      layout: "inline",
      onFinish: loginHandler,
      children: [
        /* @__PURE__ */ jsx(Form.Item, { name: "email", label: "\u041B\u043E\u0433\u0438\u043D", className: "input-inline", children: /* @__PURE__ */ jsx(Input, {}) }),
        /* @__PURE__ */ jsx(Form.Item, { name: "password", label: "\u041F\u0430\u0440\u043E\u043B\u044C", className: "input-inline", children: /* @__PURE__ */ jsx(Input.Password, {}) }),
        /* @__PURE__ */ jsx(Form.Item, { children: /* @__PURE__ */ jsx(Button, { type: "primary", htmlType: "submit", children: "\u0410\u0432\u0442\u043E\u0440\u0438\u0437\u043E\u0432\u0430\u0442\u044C\u0441\u044F" }) })
      ]
    }
  ) });
}
